name: create_pull-request
on: 
    workflow_dispatch:
    workflow_call:
      inputs:
        SourceCodeRepo:
            required: true
            type: string
        SourceCodeBranch:
            required: true
            type: string
      outputs:
        PR_NUMBER:
          description: "Pull request number"
          value: ${{ jobs.create-pull-request.outputs.pr_number }}
env:
    destinationMergeRequest: "main"

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.cpr.outputs.pr_number }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
            repository: ${{inputs.SourceCodeRepo}}
            ref: ${{inputs.SourceCodeBranch}}

      - name: create pull request to main branch
        ## gh pr create -B base_branch -H branch_to_merge
        id: cpr
        run: |
          pr_list=$(gh pr list --base ${{ env.destinationMergeRequest }} --head ${{ github.ref_name }})
          if [ -n "$pr_list" ]; then
            # Pull request exists, extract its number
            pr_number=$(echo "$pr_list" | head -n 1 | awk '{print $1}')
            echo "Pull request already exists. Deleting PR $pr_number..."
            gh pr close $pr_number
            echo "Delete existed pull request. Create new"
          else
            echo "Pull request does not exist. Create new"
          fi 
         
          pr_info=$(gh pr create -B ${{env.destinationMergeRequest}} \
          -H ${{github.ref_name}} \
          --title 'Merge ${{github.ref_name}} into ${{env.destinationMergeRequest}}' \
          --body 'Created by Github action' )

          pr_number=$(echo "$pr_info" | grep -oE '/pull/([0-9]+)' | cut -d'/' -f 3)
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT

          echo "create new pull request"
          echo $pr_number
          
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check PR State
        id: check-pr-state
        run: |
            pr_state=$(gh pr view ${{ steps.cpr.outputs.pr_number }} --json state -q .state)
            if [ "$pr_state" == "OPEN" ]; then
              echo "Pull Request is open and can be merged."
              # gh pr merge ${{ steps.cpr.outputs.pr_number }} --merge
            else
              echo "Pull Request is not in a mergable state."
            fi
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Check outputs
        run: |
           echo "Pull Request Number - ${{ steps.cpr.outputs.pr_number }}"
